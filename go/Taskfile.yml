# https://taskfile.dev

version: '3'

vars:
  GREETING: Hi!
  EXECUTABLE_NAME: vault
  DOCKER_IMAGE_NAME: vault
  VAULT_DIR: /home/zeltron/.vault
  DOCKER_MOUNT_PATH: /root/.vault

tasks:
  fmt:
    cmds:
      - go fmt ./...
      - gofumpt -e -l -w -extra .

  dockerbuild:
    cmds:
      - docker build -t {{.DOCKER_IMAGE_NAME}} .

  dockerrun:
    cmds:
      - docker run -v {{.VAULT_DIR}}:{{.DOCKER_MOUNT_PATH}} -it {{.DOCKER_IMAGE_NAME}} {{.CLI_ARGS}}

  lint:
    cmds:
      - staticcheck -checks all ./...
      - golangci-lint run --sort-results

  coverprofile:
    cmds:
      - go test -cover -coverprofile=coverage/cover.out ./...

  showcoverage:
    cmds:
      - go tool cover -html coverage/cover.out

  vault-help:
    cmds:
      - go run cmd/vault/* -help

  docs:
    cmds:
      - go run golang.org/x/pkgsite/cmd/pkgsite@latest

  build:
    cmds:
      - go generate ./...
      - rm -rf bin/*
      - GOOS=linux GOARCH=amd64 go build -o bin/{{.EXECUTABLE_NAME}}-linux cmd/vault/*
      - GOOS=windows GOARCH=amd64 go build -o bin/{{.EXECUTABLE_NAME}}-windows cmd/vault/*
      - GOOS=darwin GOARCH=amd64 go build -o bin/{{.EXECUTABLE_NAME}}-darwin cmd/vault/*
      - zip -r -j bin/vault.zip bin/*

  buildrun:
    cmds:
      - ./bin/{{.EXECUTABLE_NAME}}-$(go env GOOS) {{.CLI_ARGS}}

  run:
    cmds:
      - go generate ./...
      - go run cmd/vault/* {{.CLI_ARGS}}

  test:
    cmds:
      - go test ./...

  clean:
    cmds:
      - rm -rf bin/*

  upgrade:
    cmds:
      - go get -u ./...
      - go mod tidy

  installdeps:
    cmds:
      - go mod tidy

  default:
    silent: true
    cmds:
      - echo "{{.GREETING}}, no task is provided to execute."

